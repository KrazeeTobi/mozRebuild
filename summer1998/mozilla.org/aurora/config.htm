<HTML>
<HEAD>
<TITLE>Configurable UI</TITLE>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000"
LINK="#0000EE" VLINK="#551A8B" ALINK="#FF0000"
MARGINHEIGHT=0 MARGINWIDTH=0>

<MAP NAME="banner">
<AREA SHAPE=RECT COORDS="300,11,558,44" HREF="http://www.mozilla.org/">
</MAP>

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="100%">
<TR><TD BGCOLOR="#000000" VALIGN=TOP ROWSPAN=2><IMG
SRC="../images/mozilla-banner.gif"
ALT="" BORDER=0 USEMAP="#banner"
WIDTH=600 HEIGHT=58 VSPACE=0 HSPACE=0></TD></TR></TABLE>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="100%">
<TR>


<TD BGCOLOR="#000000" VALIGN=TOP ALIGN=RIGHT><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#DDDDDD" VALIGN=TOP><IMG ALT=""
SRC="../images/curve1.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>


<TD BGCOLOR="#DDDDDD" VALIGN=TOP ROWSPAN=2>

<BR><TABLE CELLPADDING=0 CELLSPACING=3 BORDER=0>
<TR><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=19><A HREF="..//"><B> The Mozilla<BR>Organization</B></A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../mission.html"> Our Mission</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../about.html"> Who We Are</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../get-involved.html"> Getting Involved</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../community.html"> Community</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../advocacy.html"> Editorials</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../news.html"> What's New</A></TD></TR>
<TR><TD NOWRAP VALIGN=TOP COLSPAN=20><B></B></TD></TR>
<TR><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=19><A HREF="../development.html"><B> Development</B></A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../owners.html"> Module Owners</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../blue-sky/"> Blue Sky</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../projects.html"> Projects</A></TD></TR>
<TR><TD NOWRAP VALIGN=TOP COLSPAN=20><B></B></TD></TR>
<TR><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=19><A HREF="../source-code.html"><B> Source Code</B></A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../source.html"> Getting It</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../docs/"> Documentation</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../NPL/"> License Terms</A></TD></TR>
<TR><TD></TD><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=18><A HREF="../bugs/"> Bugs</A></TD></TR>
<TR><TD NOWRAP VALIGN=TOP COLSPAN=20><B></B></TD></TR>
<TR><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=19><A HREF="../search"><B> Search</B></A></TD></TR>
<TR><TD VALIGN=TOP><IMG SRC="../images/bullet1.gif" ALT="" WIDTH=8 HEIGHT=8 HSPACE=2 VSPACE=3></TD><TD NOWRAP COLSPAN=19><A HREF="../feedback.html"><B> Feedback</B></A></TD></TR>
</TABLE><BR>

</TD>


<TD BGCOLOR="#DDDDDD" VALIGN=TOP ALIGN=RIGHT><IMG ALT=""
SRC="../images/curve3.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#000000" VALIGN=TOP><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD VALIGN=TOP><IMG ALT=""
SRC="../images/curve1.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>


<TD VALIGN=TOP ROWSPAN=2>
<P><BR>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">


   
   



<H1>
Configurable Chrome (Cthulhu)</H1>
<I>Engineering Specification</I>
<BR><I>Written by <A HREF="mailto:hyatt@netscape.com">David Hyatt</A></I>
<BR><I>Last Modified 7/30/98</I>
<H2>
<B>What is Chrome?</B></H2>
The <I>chrome </I>is that part of the browser window that lies outside
the browsers's content area. It encompasses the toolbars, Aurora tree views
launched from toolbars, and embedded menus (for those platforms that support
them). This spec will not cover configurable menus.
<P>This document is divided into several sections, and is all work in process.&nbsp;
The first section outlines those aspects of the chrome that are configurable
and provides a comprehensive listing of the properties that each front
end should respond to. The second section covers policies for user-level
modification of the chrome. The third section deals with downloadable chrome
and the problems that must be dealt with in order to make such a scheme
work in practice.&nbsp; The last section describes some of our current
thinking about the default appearance of the chrome, i.e., what the toolbars
and tree views will look like when the user first runs Netscape 5.0.&nbsp;
We are running usability studies so this is likely to change.
<BR>&nbsp;
<H2>
1. Configurable Properties</H2>
The entire chrome structure is hierarchically organized into <I>nodes</I>
that are managed by RDF and HT. There is a top-level chrome node whose
children represent the two toolbars. Their children in turn represent the
buttons and objects found on the toolbars. Tree views and toolbars therefore
are all nothing more than collections of leaf nodes (commands/URLS) and
container nodes (which contain hierarchies of commands/containers/URLS).
By associating certain properties with specific nodes, we can define both
appearance and behavior for elements of the chrome such as toolbars, buttons,
and tree views. Depending on how a nodal hierarchy is being displayed (e.g.,
as a toolbar, single button, or tree), different properties of the root
node of that hierarchy will be used to determine the appearance and behavior
of objects in the view.
<P>All nodes have two basic properties that should always be specified:
<BR><B>name</B><I> - </I>The node's name (e.g., Navigation Toolbar, Info
Toolbar, Bookmarks, History, etc.). This is a localizable property.
<BR><B>href/id</B><I> - </I>The URL or id for the node. This property is
not localizable.
<H4>
Custom Icon Properties</H4>
Any node that will potentially be displayed in a tree, toolbar, or menu
can have a custom icon associated with it.&nbsp; A custom icon can be an
arbitrary gif/jpeg, and it can be animated.&nbsp; There are four different
icon properties that can be specified. Icon properties are not localizable.
<BR><B>smallIcon</B><I> - </I>The icon that should normally be used for
the node.
<BR><B>smallRolloverIcon</B><I> - </I>The icon that should be used when
the user mouses over the item in the view.
<BR><B>smallPressedIcon</B><I> - </I>The icon that should be used when
the user clicks on the item in the view.
<BR><B>smallDisabledIcon</B><I> - </I>The icon to use when the command
is inaccessible.
<P>If only the <I>smallIcon</I> property is specified for a node, then
Navigator should be prepared to apply the appropriate transformations to
that icon if no other custom icons are specified. For example, if a custom
icon is specified only for the normal state of the Back button on the Navigation
Toolbar, then Navigator should grey out that icon if the Back command becomes
disabled. It is permissible to assume, if the <I>smallIcon</I> property
is not specified, that the node in question does not have a custom icon
at all.
<H4>
View Properties</H4>
A <I>view </I>can be either a toolbar or tree view.&nbsp; The following
properties should be responded to by all views.
<BR>&nbsp;
<TABLE BORDER WIDTH="90%" >
<TR>
<TD WIDTH="65%"><B>Property Name</B></TD>

<TD WIDTH="24%"><B>Default Value if HT_GetNodeData fails</B></TD>

<TD WIDTH="11%"><B>Localizable?</B></TD>
</TR>

<TR>
<TD WIDTH="65%"><B>viewBGURL</B><I> - </I>The URL that points to a "skin"
that is tiled onto the view background. Whenever two contiguous toolbars
or contiguous elements in the tree area (title bar, column headers, tree)
share the same background URL, the background should flow smoothly between
them. The tiling should occur over the entire area shared by the contiguous
elements.&nbsp;</TD>

<TD WIDTH="24%">Empty string</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>viewBGColor</B><I> - </I>The background color that should
be used in the view.&nbsp; Should be shown if the background fails to load
or if a background is not present. Should also be used as the basis for
computation of appropriate highlight and shadow colors for any 3D effects
(e.g., separators) that will be drawn in the view.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific chrome color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>viewFGColor</B><I> - </I>The foreground color that should
be used in the view.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific text color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%" HEIGHT="44"><B>viewRolloverColor</B><I> - </I>The foreground
color used when an item is moused over in the view.</TD>

<TD WIDTH="24%" HEIGHT="44">Platform-specific text color</TD>

<TD WIDTH="11%" HEIGHT="44">No</TD>
</TR>

<TR>
<TD WIDTH="65%" HEIGHT="22"><B>viewPressedColor</B><I> - </I>The foreground
color used when an item is pressed in the view.&nbsp;</TD>

<TD WIDTH="24%" HEIGHT="22">Platform-specific text color</TD>

<TD WIDTH="11%" HEIGHT="22">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>viewDisabledColor</B><I> - </I>The foreground color
used when an item is disabled in the view.</TD>

<TD WIDTH="24%">Platform-specific text color</TD>

<TD WIDTH="11%">No</TD>
</TR>
</TABLE>

<P>&nbsp;
<H4>
Tree Properties</H4>
The following properties apply only to a view that is displayed as a tree.
<BR>&nbsp;
<TABLE BORDER WIDTH="90%" >
<TR>
<TD WIDTH="65%"><B>Property Name</B></TD>

<TD WIDTH="24%"><B>DefaultValue if HT_GetNodeData fails</B></TD>

<TD WIDTH="11%"><B>Localizable?</B></TD>
</TR>

<TR>
<TD WIDTH="65%"><B>titleBarFGColor</B><I>, </I><B>titleBarBGColor</B><I>,
</I><B>titleBarBGURL</B>
- Colors and images to use for the title bar above the tree view.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific colors</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>selectionFGColor</B><I>, </I><B>selectionBGColor</B><I>
- </I>The colors to use for selected items in the tree view.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific colors</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>columnHeaderFGColor</B><I>, </I><B>columnHeaderBGColor</B><I>,
</I><B>columnHeaderBGURL</B>
- Colors and images to use for the column headers below the title bar and
above the tree view.&nbsp; The foreground color should be used to draw
the horizontal lines above and below the columns, the text in the columns,
the arrows that appear on the columns, and the dividers between the columns.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific colors</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>showTreeConnections</B><I> - </I>Whether or not to display
the triggers and the vertical bars/lines between sibling nodes.&nbsp; Has
a value of "Yes" or "No".&nbsp; (Case-insensitive.)&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>treeConnectionColor</B><I> - </I>The colors to use for
tree connections.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>showDividers </B><I>- </I>Whether or not to display
the horizontal divider lines between nodes.&nbsp; Has a value of "Yes"
or "No".&nbsp;</TD>

<TD WIDTH="24%">No</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>dividerColor</B><I> - </I>The color to use for the horizontal
divider lines.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>selectedColumnHeaderFGColor</B><I>, </I><B>selectedColumnHeaderBGColor</B><I>
- </I>The colors to use for the column header that is in an ascending or
descending sort state.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>sortColumnFGColor</B><I>, </I><B>sortColumnBGColor</B><I>
- </I>The colors to use for the column in the tree view itself when a sort
is imposed on that column.&nbsp;</TD>

<TD WIDTH="24%">Platform-specific color</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>showColumnHeaders - </B>Whether or not the column headers
should be displayed. Has a value of "Yes" or "No". If the column headers
are omitted, then the title bar and the tree view should join smoothly,
i.e., there should be no dividing line between them.&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>useSingleClick - </B>Whether or not the view should
use a single click or double click model. Has a value of "Yes" or "No".
If the view uses a single click model, then this should apply to all elements
in the tree view regardless of type.&nbsp;</TD>

<TD WIDTH="24%">No</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>useInlineEditing - </B>Whether or not the tree view
should allow inline editing of nodes. Has a value of "Yes" or "No". This
attribute usually has a value of "No" if useSingleSlick is enabled.&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>useSelection - </B>Whether or not the tree view should
have a notion of selection. If the tree view does not have a notion of
selection, then marquee selection, drag &amp; drop, and context menus should
all be disabled. Otherwise, they should all be enabled. "Yes" or "No"&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>loadOpenState - </B>Whether or not the tree view should
auto-open those folders that were saved as such. Has a value of "Yes" or
"No".&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%" HEIGHT="35"><B>saveOpenState - </B>Whether or not the tree
view should save its open state when it is destroyed.&nbsp;</TD>

<TD WIDTH="24%" HEIGHT="35">Yes</TD>

<TD WIDTH="11%" HEIGHT="35">No</TD>
</TR>
</TABLE>

<P>&nbsp;
<BR>&nbsp;
<BR>&nbsp;
<P><B>Navigation vs. Management Mode</B>
<P>Now that the tree properties have been defined, it is possible to specify
which of the above properties are set for our current definitions of navigation
and management modes.
<BR>&nbsp;
<BR>&nbsp;
<BR>&nbsp;
<TABLE BORDER WIDTH="75%" >
<TR>
<TD><B>Navigation Mode</B>
<BR>&nbsp;
<UL>
<LI>
useSingleClick = "Yes"</LI>

<LI>
useInlineEditing = "No"</LI>

<LI>
useSelection = "No"</LI>

<LI>
showColumnHeaders = "No"</LI>

<LI>
showDividers = "No"</LI>

<LI>
showTreeConnections = "No"</LI>

<LI>
loadOpenState = "No"</LI>

<LI>
saveOpenState = "No"</LI>
</UL>
</TD>

<TD><B>Management Mode</B>
<BR>&nbsp;
<UL>
<LI>
useSingleClick = "No"</LI>

<LI>
useInlineEditing = "Yes"</LI>

<LI>
useSelection = "Yes"</LI>

<LI>
showColumnHeaders = "Yes"</LI>

<LI>
showDividers="Yes"</LI>

<LI>
showTreeConnections="Yes"</LI>

<LI>
loadOpenState = "Yes"</LI>

<LI>
saveOpenState = "Yes"</LI>
</UL>
</TD>
</TR>
</TABLE>

<P><B>Toolbar Properties</B>
<P>The following properties apply only to a view that is displayed as a
toolbar.
<BR>&nbsp;
<BR>&nbsp;
<BR>&nbsp;
<TABLE BORDER WIDTH="90%" >
<TR>
<TD WIDTH="57%"><B>Property Name</B></TD>

<TD WIDTH="31%"><B>Default value if HT_GetNodeData fails</B></TD>

<TD WIDTH="12%"><B>Localizable?</B></TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarBitmapPosition </B>- Can be either "side" or
"top".&nbsp; Where to display the bitmap relative to the text on the buttons
in the toolbar.&nbsp; (This property is "top" for the command toolbar and
"side" for the personal toolbar.)&nbsp; If omitted, the bitmaps should
be placed on the side.&nbsp;</TD>

<TD WIDTH="31%">Side</TD>

<TD WIDTH="12%">No</TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarButtonsFixedSize</B> - Can be either "yes" or
"no".&nbsp; If yes, then the buttons on the toolbar are the same size as
the largest button on the toolbar.&nbsp; (This property is set for the
command toolbar in the browser.) Note that URL bars and separators are
not affected by this restriction. If omitted, the buttons should size dynamically.&nbsp;</TD>

<TD WIDTH="31%">No</TD>

<TD WIDTH="12%">No</TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarMinChars, toolbarMaxChars </B><I>- </I>If the
buttons are allowed to size dynamically, and if button text is the constraining
factor, then the button text should be clipped with ellipses so that it
falls into the range specified by these attributes.&nbsp; The defaults
if omitted are 15/30 for dynamic toolbars and 15/15 for fixed size toolbars.&nbsp;
The toolbar layout manager is allowed to shrink and grow the buttons as
needed to fit them on the toolbar, as long as it obeys these constraints.&nbsp;</TD>

<TD WIDTH="31%">15/15 for fixed size buttons, 15/30 otherwise.</TD>

<TD WIDTH="12%">No</TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarDisplayMode - </B>How to display the toolbar.
Has three values: "text", "pictures", and "picturesAndText".&nbsp;</TD>

<TD WIDTH="31%">PicturesAndText</TD>

<TD WIDTH="12%">No</TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarCollapsed - </B>Whether or not the toolbar is
collapsed. Has a value of "Yes" or "No".&nbsp;</TD>

<TD WIDTH="31%">No</TD>

<TD WIDTH="12%">No</TD>
</TR>

<TR>
<TD WIDTH="57%"><B>toolbarVisible - </B>Whether or not the toolbar is visible.
Has a value of "Yes" or "No".&nbsp;</TD>

<TD WIDTH="31%">Yes</TD>

<TD WIDTH="12%">No</TD>
</TR>
</TABLE>

<P>&nbsp;
<BR>&nbsp;
<P>Note: The "grippy" on the far left of the toolbars is not customizable.
It should, in the normal state, blend in with the viewBGColor.
<H4>
Toolbar Button Properties</H4>
The following properties apply to buttons on a toolbar.
<BR>&nbsp;
<TABLE BORDER WIDTH="90%" >
<TR>
<TD WIDTH="65%"><B>Property Name</B></TD>

<TD WIDTH="24%"><B>Default value if HT_GetNodeData fails</B></TD>

<TD WIDTH="11%"><B>Localizable?</B></TD>
</TR>

<TR>
<TD WIDTH="65%" HEIGHT="21"><B>buttonTooltipText</B><I> - </I>The tooltip
text that should be used for the button</TD>

<TD WIDTH="24%" HEIGHT="21">Use the <I>name</I> property</TD>

<TD WIDTH="11%" HEIGHT="21">Yes</TD>
</TR>

<TR>
<TD WIDTH="65%" HEIGHT="45"><B>buttonStatusbarText</B><I> - </I>The status
bar text that should be used for the button.&nbsp; Defaults to the node's
URL for non-containers and to the node's title for containers.&nbsp;</TD>

<TD WIDTH="24%" HEIGHT="45">Use the <I>name </I>property for containers.
Use the <I>URL</I> for all other nodal types.</TD>

<TD WIDTH="11%" HEIGHT="45">Yes</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>buttonBorder - </B>Whether or not the button has a border.
Has a value of "Yes" or "No".&nbsp;</TD>

<TD WIDTH="24%">Yes</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>buttonDisplayMode - </B>Can be used to lock a button
in a specific mode. Has a value of picturesMode, textMode, or picturesAndTextMode.&nbsp;</TD>

<TD WIDTH="24%">Inherit from toolbar's mode.</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>buttonTreeMode - </B>Whether or not a tree launched
from this button comes up in "navigation" or "management" mode.&nbsp;</TD>

<TD WIDTH="24%">Navigation</TD>

<TD WIDTH="11%">No</TD>
</TR>

<TR>
<TD WIDTH="65%"><B>buttonTreeState - </B>Whether or not a tree launched
from this button comes up in a "docked", or "popup" state.&nbsp;</TD>

<TD WIDTH="24%">Popup</TD>

<TD WIDTH="11%">No</TD>
</TR>
</TABLE>

<P>&nbsp;
<BR>&nbsp;
<P>Note: The back and forward timed menus must be hacked in by each FE.
There is no time in the 9/1 schedule to craft a general solution for dynamically
constructed context-sensitive menus.
<H4>
<B>URLBar Properties</B></H4>
The following properties apply only to a URL bar on a toolbar:
<BR><B>urlbar</B><I> - </I>If set to "Yes", then the toolbar item is assumed
to be a URL bar. This property is not localizable. It defaults to "No".
<BR><B>width - </B>The width of the URL bar. Can be specified as pixels,
a percentage, or with a * (indicating that the URL bar should expand to
fill as much space on its current row as it can). If omitted, a value of
100 pixels is used. This property is not localizable.
<H4>
Animation Properties</H4>
The animation is a special node that describes the look of the animation.&nbsp;
Since the animation can appear as one of two sizes, four different images
are required to describe it.&nbsp; The animation also makes use of the
<I>buttonTooltipText</I>
and <I>buttonStatusbarText</I> properties to describe its tooltip and status
information.&nbsp; The animation node's <I>href
</I>property is used to
determine where the user goes when the animation is clicked.
<P>Properties unique to the animation are:
<BR><B>largeStaticIconURL, smallStaticIconURL</B><I> - </I>The icons to
use when the animation is at rest. Not localizable. Defaults to internal
bitmaps.
<BR><B>largeAnimatedIconURL, smallAnimatedIconURL </B><I>- </I>URLs that
point to animated GIFs that should be used when animating. Not localizable.
Defaults to internal bitmaps.
<H4>
Separator Properties</H4>
A node can be specified as a separator by using "separator" as the ID of
the node.&nbsp; Separators show up everywhere, in the trees, toolbars,
and menus. A separator is rendered using highlight and shadow colors that
are computed dynamically by using the <I>viewBGColor</I> property for the
view in which it is found.
<H4>
Internal Commands</H4>
Internal commands on toolbars and in menus are represented with a special
internal URL that should only be obeyed when invoked from the toolbars
or menus within an appropriate view (one that knows how to respond to the
commands).&nbsp; Examples of these special URLs are "command:back", "command:forward",
etc. etc.
<P>Each front end should maintain a map from backend URLs to frontend resources
and should handle the enabling/disabling of the items themselves.
<P><B>Templates</B>
<P>There are two special nodes used to describe the default appearance
for tree views and toolbars. Specifically one node is used for the toolbar
and navigation mode defaults, and another is used for the management mode
defaults. These nodes have properties as if they were the root nodes of
a view, and the HT layer will look for these defaults when HT_GetNodeData
is called before failing.
<P>The basic rule is that if a node specifies the property then that property
should always be used. If the node omits a property, then HT should look
for a template for that view. If the property is defined in the template,
then it should be used. If no property is specified, then the front end
must use the appropriate default values (TODO: make a comprehensive list
of all the defaults).
<P>Note that the FE never needs to think about these templates.
<H2>
2. User Modification of the Chrome</H2>
<B>Editing Properties - </B>Without exception, every single property specified
in section 2 can be edited by the user. Properties specific to a given
node can always be editing by selecting Properties on the item from the
context menu and then editing the values in the HTML dialogs that are displayed.
The <I>Undo </I>system should be able to reverse any changes that were
made in a single session with a properties dialog.
<P><B>Drag &amp; Drop - </B>Drag and drop can be used to reorder buttons
on the toolbar or to place new buttons on the toolbar. The user can create
or remove entire toolbars and/or reorder/set the properties for specific
nodes within the chrome.
<P><B>Policies for Fixing Mistakes - </B>Nodes can be deleted from toolbars
or properties of nodes can be changed that render the view unusable. It
is important therefore to provide the user with a way to recover if he/she
makes a mistake. The first line of defense for deletion is to bring up
a dialog that double-checks the deletion request. <I>No item should be
deleted without first prompting the user. </I>Next, all changes should
be reversible using the <I>Undo </I>system. Finally, there is a blanket
reset option for the toolbars that returns them to the state specified
in the user's original remote RDF file.
<H2>
3. Downloadable Chrome</H2>
<B>What is downloadable chrome? - </B>The user's default chrome appearance
and behavior are specified using a remote RDF file that resides on a trusted
Internet site. This trusted site is known as the <I>chrome provider</I>.
Since the chrome provider dynamically serves up the chrome, changes can
be made to the appearance, layout, and even functionality of Navigator,
without any change being required in the executable itself. By default,
NetCenter is the trusted chrome provider.
<P><B>Basic Requirements - </B>Up front, there needs to be a new smarter
cache that serves up cached copies first and then checks for changes in
the cached files. The cache also needs to know how to determine if a network
connection is established.
<P><B>The Chrome Cache - </B>The entire chrome description is contained
in a single RDF file that by default resides on NetCenter. This file specifies
the initial appearance of the chrome, appearance/behavior defaults for
views, and smart browsing services. This RDF file, as well as any custom
icons that will appear in the chrome, are all contained in a special cache.
The only items that can reside in this cache are RDF files required for
proper chrome display and all RDF custom icons.
<P>The Navigator installer should place copies of the images and the RDF
file into this cache when 5.0 is first placed onto a user's system.
<P>When the user runs 5.0, the cached copy is ALWAYS used to initially
display the chrome. Cached icons are also used. This ensures that the chrome
is always immediately available and displayable, and it also ensures that
no connection is opened if the user is offline. The Chrome Cache, on a
per session basis, should queue up any requests for files, and mark them
for an update when a network connection is next made. <I>The Chrome Cache
should never initiate a network connection to retrieve a file that is already
in the cache. It should only initiate a connection if the file is not found
in the cache. </I>It should, of course, cache any items that it is forced
to retrieve.
<P>The Chrome Cache's size is 1 megabyte initially and this size should
be editable by the user. The Chrome Cache should consider the RDF files
required for the chrome and custom icons that will show up in the toolbars
to be of the highest priority, and it should page out all other files before
getting rid of these.
<P><B>Changing the Chrome - </B>Once the network connection is established,
the Chrome Cache services all of the queued up requests and updates the
cache. It should notify the RDF/HT layer whenever the RDF chrome file changes.
The user's chrome, by default, will simply update behind the scenes. The
user will have the option of changing this behavior. Navigator can "Always
accept" or "Always reject" for any chrome change.
<P><B>Chrome Rejection - </B>Whenever the user rejects a chrome change,
the user's current chrome RDF file is <I>cloned </I>into a new RDF file,
and this new file is used as the default instead of the chrome provider's
file. Although the RDF layer uses this new file to lay out the chrome,
it should continue to check for updates with the chrome provider and to
prompt the user should the chrome provider's file change again.
<P>Note that once the user gets into the state where he has "locked out"
changes from the chrome provider, he has the option of saying "Accept Now!"
to bring his chrome back into sync with the chrome provider's specification.
When this happens, the cloned chrome RDF file is discarded, and the user
once more depends solely on the chrome provider's RDF file.
<P><B>Chrome Providers - </B>The chrome provider can be changed through
a preference. This pref is not visible anywhere in the UI. Note also that
on a per-window basis (using JavaScript) different chrome providers can
be specified for various windows. This allows for the creation of Web-based
apps with dynamic toolbars and popup tree views specified by the apps themselves.
The site can leverage Navigator's toolbar/tree widgetry.
<BR>&nbsp;
<H2>
4. The Default Chrome Appearance</H2>

<H2>
<I><FONT SIZE=+0>- Note this is likely to change since we are working with
usability studies to decide what the best thing to do is.</FONT></I></H2>

<H3>
Toolbars</H3>
The primary goal for the 5.0 toolbars is to <I>simplify simplify simplify.
</I>In
5.0, we will actually <I>reduce</I> the amount of chrome consumed by the
toolbars in the browser and provide a clearer distinction between the purposes
of the toolbars. There are only two toolbars in the 5.0 chrome by default.
<P><B>Navigation Toolbar - </B>This toolbar contains elements related to
the user's navigation history, including both the current page and any
pages the user might have been to in the past. Any element that is not
dependent on the current page or on navigation history should NOT be placed
on this toolbar. In 5.0, this toolbar will contain a back button, a reload/stop
button, a forward button, a location bar, and a smart browsing button (name
to be determined). The back, forward, and reload buttons are borderless
and do not have text associated with them. The location bar sits in the
middle of the toolbar and always expands to consume all remaining space
on the toolbar.
<P><B>Info Toolbar - </B>The info toolbar contains collections of hierarchical
links that expose different forms of organized information to the user.
The info toolbar by default contains a bookmarks button, a history button,
a files button, the My Netscape button, and <I>copies of</I> the contents
of the user's 4.x personal toolbar (to avoid an infinite recursion in bookmarks).
This toolbar can wrap to multiple rows.
<P>Note that in nearly all cases, a user will see a reduction in the space
occupied by the toolbars when upgrading from 4.x to 5.0. The first time
the user runs 5.0, both toolbars will be displayed (4.x toolbar prefs will
be ignored, as none of them really have any meaning any more).
<P>Tree views in the 5.0 product exist in one of three states: popup, docked,
or standalone.
<UL>
<LI>
<B>Popup -</B> Tree view appears directly underneath a folder button that
has been clicked on.</LI>

<LI>
<B>Docked - </B>Tree view is embedded on the left side of the browser window.</LI>

<LI>
<B>Standalone - </B>Tree view appears in its own window.</LI>
</UL>
A tree view can always be docked or standalone, regardless of its initial
state.
<P>A tree view always operates in one of two modes. <I>Navigation mod</I>e
is used for basic browsing of the hierarchical data. It is designed to
provide quick and easy access to information. <I>Management mode </I>is
used for advanced manipulation of the information. Detailed explanations
of the two modes are provided in the second section of this document (after
the configurable properties of tree views have been outlined). By default,
popup and docked trees appear in navigation mode.
<P><B>Folder Buttons and the Smart Browsing Button - </B>Both the smart
browsing button and the folder button on the info toolbar display trees
of information when they are pressed. The smart browsing button brings
up a <I>docked tree </I>by default. The folder buttons on the Info Toolbar
bring up <I>popup trees </I>by default.
<P>Popup trees should appear directly underneath the buttons they are associated
with, and they should be destroyed when they lose focus (unless they have
been docked or undocked by the user). Popup trees and docked trees inherit
their colors/backgrounds from the toolbars on which their owner buttons
reside.
<P>All buttons that bring up trees (whether docked or popup) should do
so on a mouse up. They should be drawn in a pressed state as long as the
tree is either popped up or docked. If the tree is either undocked or destroyed,
the button should return to its normal state. If the button is clicked
again while in the pressed state, then the tree should disappear and the
button should return to its normal state.
<P><B>Smart Browsing Defaults - </B>When 5.0 is launched for the first
time, the smart browsing button should be depressed and the docked smart
browsing tree should be displayed. The What's Related service should be
engaged and should be the one displayed, <I>provided that it has data to
display</I>. Otherwise, Navigator should open the tree to the first service
in the list for which data is available. For example, if a site map exists
for a site but no related links are found for the site, then the smart
browsing pane should be smart enough (groan) to go ahead and display the
site map. Only when the user explicitly selects a new service through the
service selector should that service be registered as the new default.
<BR>&nbsp;
<BR>&nbsp;




<P><BR>
</TD>


<TD VALIGN=TOP ALIGN=RIGHT><IMG ALT=""
SRC="../images/curve3.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#000000" VALIGN=TOP><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

</TR>
<TR>


<TD BGCOLOR="#000000" VALIGN=BOTTOM ALIGN=RIGHT><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#DDDDDD" VALIGN=BOTTOM><IMG ALT=""
SRC="../images/curve2.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#DDDDDD" VALIGN=BOTTOM ALIGN=RIGHT><IMG ALT=""
SRC="../images/curve4.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#000000" VALIGN=BOTTOM><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD VALIGN=BOTTOM><IMG ALT=""
SRC="../images/curve2.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>


<TD VALIGN=BOTTOM ALIGN=RIGHT><IMG ALT=""
SRC="../images/curve4.gif"
WIDTH=16 HEIGHT=16 HSPACE=0 VSPACE=0></TD>

<TD BGCOLOR="#000000" VALIGN=BOTTOM ALIGN=RIGHT><IMG ALT=""
SRC="../images/bit.gif"
WIDTH=4 HEIGHT=16 HSPACE=0 VSPACE=0></TD>
</TR>

<TR>

<TD BGCOLOR="#000000" COLSPAN=6><BR></TD>

<TD BGCOLOR="#000000" VALIGN=TOP>

<FONT COLOR="#AAAAAA" SIZE="-1">
Copyright &copy; 1998 Netscape Communications Corporation.
</FONT>
</FONT>
</TD>

<TD BGCOLOR="#000000" COLSPAN=2><BR></TD>
</TR>

</TABLE>
<P>
</BODY>
</HTML>
